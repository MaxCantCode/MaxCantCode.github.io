* A lite(rate) evil config for scimax
** Sensible defaults
   Nice fonts for reading
   #+begin_src emacs-lisp
     (use-package emacs
       :ensure nil
       :hook (((Info-mode text-mode special-mode) . variable-pitch-mode)
	      (text-mode . flyspell-mode)
	      ;; (text-mode . scimax formate-mode)
	      (prog-mode . flyspell-prog-mode))
       :config
       (set-face-attribute 'default nil :height (* 24 10))
       (fset 'yes-or-no-p 'y-or-n-p)
       (menu-bar-mode -1)
       (scroll-bar-mode -1)
       (electric-pair-mode))
   #+end_src
** Org ~code faces~
   #+begin_src emacs-lisp
     (use-package org
       :init
       (dolist (face '(line-number
		       org-block
		       org-code
		       org-table
		       org-verbatim))
	 (set-face-attribute `,face nil :inherit '(fixed-pitch shadow))))

     (use-package orgstrap)
   #+end_src
** Nice packages
   #+begin_src emacs-lisp
     (use-package which-key
       :config
       (setq which-key-idle-delay 0.05)
       (which-key-mode))
     
     ;; (use-package auto-com (flyspell-fix)
     (use-package company
       :config
       (setq company-idle-delay 0
	     company-minimum-prefix-length 1
	     company-selection-wrap-around t
	     company-show-numbers t)
       (global-company-mode))
     
     (use-package keycast
       :config
       (keycast-mode))
     
     (use-package eglot-jl :ensure julia-mode)
   #+end_src
** Evil defaults
   #+begin_src emacs-lisp
     (use-package scimax-evil
       :ensure nil
       :init
       (setq display-line-numbers-type 'visual
	     evil-want-C-u-scroll t
	     evil-want-Y-yank-to-eol t
	     evil-search-module 'evil-search
	     evil-undo-system 'undo-redo
	     evil-collection-setup-minibuffer t)
       (global-display-line-numbers-mode))

     (use-package general
       :init
       (general-def 'insert
	 "C-h" (general-key "DEL")
	 "C-<backspace>" 'help-command)
       (general-def 'normal
	 "S" nil
	 "s" nil
	 "O" nil
	 "o" 'evil-command-window-ex
	 "X" nil
	 "x" nil
	 "?" 'evil-command-window-search-forward))
   #+end_src
** Evil packages
   #+begin_src emacs-lisp
     (use-package evil-surround
       :config
       (global-evil-surround-mode))

     (use-package evil-quickscope
       :requires evil
       :config
       (global-evil-quickscope-always-mode))

     (use-package evil-visual-mark-mode
       :config
       (evil-visual-mark-mode))

     (let ((default-directory (file-name-directory
			       (or load-file-name (buffer-file-name)))))
       (normal-top-level-add-subdirs-to-load-path))

     (provide 'user)
     ;; (use-package user
     ;;   :ensure nil)
   #+end_src
